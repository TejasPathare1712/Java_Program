MCQ
1)A
2)B
3)B
4)C
5)B
6)A
7)C
8)B
9)D
10)B
----------------------------------------------------------------------------------------------------------------------------------
THEORY
1) Constructor Overloading is methodology in which constructor have same name but different Parameters is called as Constructor Overloading
    Student(String name,int roll_no){
		this.name = name;
		this.roll_no=roll_no;

	}
    Student(String address){
	this.address = address;
		
}
2) Class is blueprint of object and object is the instance of class creating objects of classes in main method we print the method we made before main method
-----------------------------------------------------------------------------------------------------------------------------------------
CODING

1)
public class Dog {
	String name;
	String color;
	

	public Dog(String name, String color) {
		super();
		this.name = name;
		this.color = color;
	}
	


	@Override
	public String toString() {
		return "Dog [name=" + name + ", color=" + color + "]";
	}



	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Dog d1 = new Dog("Pet Bull","Black");
		System.out.println(d1);

	}

}
2) Constructor Overloading
public class Book1 {
	String title;
	String author;
	float price;
	

	public Book1() {
		super();
		System.out.println("Default Constructor");
	}
	


	public Book1(String title, String author) {
		super();
		this.title = title;
		this.author = author;
	}



	public Book1(String title, String author, float price) {
		super();
		this.title = title;
		this.author = author;
		this.price = price;
	}
	


	@Override
	public String toString() {
		return "Book1 [title=" + title + ", author=" + author + ", price=" + price + "]";
	}



	public static void main(String[] args) {
		// TODO Auto-generated method stub
		Book1 b1 = new Book1();
		System.out.println(b1);
		Book1 b2 = new Book1("Atomic habits","James clear");
		System.out.println(b2);
		Book1 b3 = new Book1("Think and grow rich","Naplonien Hill",500);
		System.out.println(b3);
		

	}

}
